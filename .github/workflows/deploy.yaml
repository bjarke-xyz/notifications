name: Deploy

on:
  push:
    branches:
      - main

jobs:
  # TODO: Tests
  # test:
  #   runs-on: ubuntu-latest
  #   name: Test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16
  #     - run: npm install
  #     - run: npm test
  #       id: test
  #     - name: Notify on error
  #       uses: Ilshidur/action-discord@0.3.2
  #       if: failure() && steps.test.outcome == 'failure'
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  #       with:
  #         args: "‚ö†Ô∏è {{ EVENT_PAYLOAD.repository.full_name }} tests failed. <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>"

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    # needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm install
      - uses: cloudflare/wrangler-action@2.0.0
        name: Publish
        id: publish
        with:
          apiToken: ${{ secrets.CF_WORKER_TOKEN }}
          environment: 'production'
          command: 'publish src/index.ts'
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      - name: Notify on error
        uses: fjogeleit/http-request-action@v1
        if: failure() && steps.publish.outcome == 'failure'
        with:
          url: ${{ secrets.NOTIFICATIONS_URL }}
          method: 'POST',
          username: ${{ secrets.NOTIFICATIONS_USERNAME }}
          password: ${{ secrets.NOTIFICATIONS_PASSWORD }}
          data: '{ "channels": ["discord", "email"], "message": { "message": "‚ö†Ô∏è {{ EVENT_PAYLOAD.repository.full_name }} failed to release. <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>" } }'
      - name: Notify on success
        uses: fjogeleit/http-request-action@v1
        if: success() && steps.publish.outcome == 'success'
        with:
          url: ${{ secrets.NOTIFICATIONS_URL }}
          method: 'POST',
          username: ${{ secrets.NOTIFICATIONS_USERNAME }}
          password: ${{ secrets.NOTIFICATIONS_PASSWORD }}
          data: '{ "channels": ["discord", "email"], "message": { "message": "üöÄ {{ EVENT_PAYLOAD.repository.full_name }} has been released. <https://github.com/${{ github.repository }}/>" } }'

